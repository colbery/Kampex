{"version":3,"file":"cubemap-video.js","sources":["../../src/adapters/shared/AbstractVideoAdapter.js","../../src/adapters/cubemap-video/index.js"],"sourcesContent":["import * as THREE from 'three';\nimport { AbstractAdapter, CONSTANTS, PSVError } from '../..';\n\n/**\n * @typedef {Object} PSV.adapters.AbstractVideoAdapter.Video\n * @summary Object defining a video\n * @property {string} source\n */\n\n/**\n * @typedef {Object} PSV.adapters.AbstractVideoAdapter.Options\n * @property {boolean} [autoplay=false] - automatically start the video\n * @property {boolean} [muted=autoplay] - initially mute the video\n */\n\n/**\n * @summary Base video adapters class\n * @memberof PSV.adapters\n * @abstract\n * @private\n */\nexport class AbstractVideoAdapter extends AbstractAdapter {\n\n  static supportsTransition = false;\n  static supportsPreload = false;\n  static supportsDownload = false;\n\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @member {PSV.adapters.AbstractVideoAdapter.Options}\n     * @private\n     */\n    this.config = {\n      autoplay: false,\n      muted   : options?.autoplay ?? false,\n      ...options,\n    };\n\n    /**\n     * @member {HTMLVideoElement}\n     * @private\n     */\n    this.video = null;\n\n    this.psv.on(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.BEFORE_RENDER, this);\n\n    this.__removeVideo();\n\n    super.destroy();\n  }\n\n  /**\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      case CONSTANTS.EVENTS.BEFORE_RENDER:\n        if (this.video) {\n          this.psv.needsUpdate();\n        }\n        break;\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @param {PSV.adapters.AbstractVideoAdapter.Video} panorama\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama) {\n    if (typeof panorama !== 'object' || !panorama.source) {\n      return Promise.reject(new PSVError('Invalid panorama configuration, are you using the right adapter?'));\n    }\n\n    if (!this.psv.getPlugin('video')) {\n      return Promise.reject(new PSVError('Video adapters require VideoPlugin to be loaded too.'));\n    }\n\n    const video = this.__createVideo(panorama.source);\n\n    return this.__videoLoadPromise(video)\n      .then(() => {\n        const texture = new THREE.VideoTexture(video);\n        return { panorama, texture };\n      });\n  }\n\n  /**\n   * @override\n   */\n  __switchVideo(texture) {\n    let currentTime;\n    let duration;\n    let paused = !this.config.autoplay;\n    let muted = this.config.muted;\n    let volume = 1;\n    if (this.video) {\n      ({ currentTime, duration, paused, muted, volume } = this.video);\n    }\n\n    this.__removeVideo();\n    this.video = texture.image;\n\n    // keep current time when switching resolution\n    if (this.video.duration === duration) {\n      this.video.currentTime = currentTime;\n    }\n\n    // keep volume\n    this.video.muted = muted;\n    this.video.volume = volume;\n\n    // play\n    if (!paused) {\n      this.video.play();\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeTexture(textureData) {\n    if (textureData.texture) {\n      const video = textureData.texture.image;\n      video.pause();\n      this.psv.container.removeChild(video);\n    }\n    textureData.texture?.dispose();\n  }\n\n  /**\n   * @summary Removes the current video element\n   * @private\n   */\n  __removeVideo() {\n    if (this.video) {\n      this.video.pause();\n      this.psv.container.removeChild(this.video);\n      delete this.video;\n    }\n  }\n\n  /**\n   * @summary Creates a new video element\n   * @memberOf PSV.adapters\n   * @param {string} src\n   * @return {HTMLVideoElement}\n   * @private\n   */\n  __createVideo(src) {\n    const video = document.createElement('video');\n    video.crossOrigin = this.psv.config.withCredentials ? 'use-credentials' : 'anonymous';\n    video.loop = true;\n    video.playsinline = true;\n    video.style.display = 'none';\n    video.muted = this.config.muted;\n    video.src = src;\n    video.preload = 'metadata';\n\n    this.psv.container.appendChild(video);\n\n    return video;\n  }\n\n  /**\n   * @private\n   */\n  __videoLoadPromise(video) {\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      video.addEventListener('loadedmetadata', function onLoaded() {\n        if (this.video && video.duration === this.video.duration) {\n          resolve(self.__videoBufferPromise(video, this.video.currentTime));\n        }\n        else {\n          resolve();\n        }\n        video.removeEventListener('loadedmetadata', onLoaded);\n      });\n\n      video.addEventListener('error', function onError(err) {\n        reject(err);\n        video.removeEventListener('error', onError);\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  __videoBufferPromise(video, currentTime) {\n    return new Promise((resolve) => {\n      function onBuffer() {\n        const buffer = video.buffered;\n        for (let i = 0, l = buffer.length; i < l; i++) {\n          if (buffer.start(i) <= video.currentTime && buffer.end(i) >= video.currentTime) {\n            video.pause();\n            video.removeEventListener('buffer', onBuffer);\n            video.removeEventListener('progress', onBuffer);\n            resolve();\n            break;\n          }\n        }\n      }\n\n      // try to reduce the switching time by preloading in advance\n      // FIXME find a better way ?\n      video.currentTime = Math.min(currentTime + 2000, video.duration.currentTime);\n      video.muted = true;\n\n      video.addEventListener('buffer', onBuffer);\n      video.addEventListener('progress', onBuffer);\n\n      video.play();\n    });\n  }\n\n}\n","import * as THREE from 'three';\nimport { CONSTANTS } from '../..';\nimport { AbstractVideoAdapter } from '../shared/AbstractVideoAdapter';\n\n/**\n * @typedef {Object} PSV.adapters.CubemapVideoAdapter.Video\n * @summary Object defining a video\n * @property {string} source\n */\n\n/**\n * @typedef {Object} PSV.adapters.CubemapVideoAdapter.Options\n * @property {boolean} [autoplay=false] - automatically start the video\n * @property {boolean} [muted=autoplay] - initially mute the video\n * @property {number} [equiangular=true] - if the video is an equiangular cubemap (EAC)\n */\n\n\n/**\n * @summary Adapter for cubemap videos\n * @memberof PSV.adapters\n * @extends PSV.adapters.AbstractAdapter\n */\nexport class CubemapVideoAdapter extends AbstractVideoAdapter {\n\n  static id = 'cubemap-video';\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.adapters.CubemapVideoAdapter.Options} options\n   */\n  constructor(psv, options) {\n    super(psv, {\n      equiangular: true,\n      ...options,\n    });\n  }\n\n  /**\n   * @override\n   * @param {PSV.adapters.CubemapVideoAdapter.Video} panorama\n   * @returns {Promise.<PSV.TextureData>}\n   */\n  loadTexture(panorama) {\n    return super.loadTexture(panorama);\n  }\n\n  /**\n   * @override\n   */\n  createMesh(scale = 1) {\n    const cubeSize = CONSTANTS.SPHERE_RADIUS * 2 * scale;\n    const geometry = new THREE.BoxGeometry(cubeSize, cubeSize, cubeSize)\n      .scale(1, 1, -1)\n      .toNonIndexed();\n\n    geometry.clearGroups();\n\n    const uvs = geometry.getAttribute('uv');\n\n    /*\n      Structure of a frame\n\n      1 +---------+---------+---------+\n        |         |         |         |\n        |  Left   |  Front  |  Right  |\n        |         |         |         |\n    1/2 +---------+---------+---------+\n        |         |         |         |\n        | Bottom  |  Back   |   Top   |\n        |         |         |         |\n      0 +---------+---------+---------+\n        0        1/3       2/3        1\n\n       Bottom, Back and Top are rotated 90Â° clockwise\n     */\n\n    // columns\n    const a = 0;\n    const b = 1 / 3;\n    const c = 2 / 3;\n    const d = 1;\n\n    // lines\n    const A = 1;\n    const B = 1 / 2;\n    const C = 0;\n\n    // left\n    uvs.setXY(0, a, A);\n    uvs.setXY(1, a, B);\n    uvs.setXY(2, b, A);\n    uvs.setXY(3, a, B);\n    uvs.setXY(4, b, B);\n    uvs.setXY(5, b, A);\n\n    // right\n    uvs.setXY(6, c, A);\n    uvs.setXY(7, c, B);\n    uvs.setXY(8, d, A);\n    uvs.setXY(9, c, B);\n    uvs.setXY(10, d, B);\n    uvs.setXY(11, d, A);\n\n    // top\n    uvs.setXY(12, d, B);\n    uvs.setXY(13, c, B);\n    uvs.setXY(14, d, C);\n    uvs.setXY(15, c, B);\n    uvs.setXY(16, c, C);\n    uvs.setXY(17, d, C);\n\n    // bottom\n    uvs.setXY(18, b, B);\n    uvs.setXY(19, a, B);\n    uvs.setXY(20, b, C);\n    uvs.setXY(21, a, B);\n    uvs.setXY(22, a, C);\n    uvs.setXY(23, b, C);\n\n    // back\n    uvs.setXY(24, c, B);\n    uvs.setXY(25, b, B);\n    uvs.setXY(26, c, C);\n    uvs.setXY(27, b, B);\n    uvs.setXY(28, b, C);\n    uvs.setXY(29, c, C);\n\n    // front\n    uvs.setXY(30, b, A);\n    uvs.setXY(31, b, B);\n    uvs.setXY(32, c, A);\n    uvs.setXY(33, b, B);\n    uvs.setXY(34, c, B);\n    uvs.setXY(35, c, A);\n\n    // shamelessly copied from https://github.com/videojs/videojs-vr\n    const material = new THREE.ShaderMaterial({\n      uniforms      : {\n        mapped     : { value: null },\n        contCorrect: { value: 1 },\n        faceWH     : { value: new THREE.Vector2(1 / 3, 1 / 2) },\n        vidWH      : { value: new THREE.Vector2(1, 1) },\n      },\n      vertexShader  : `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.);\n}`,\n      fragmentShader: `\nvarying vec2 vUv;\nuniform sampler2D mapped;\nuniform vec2 faceWH;\nuniform vec2 vidWH;\nuniform float contCorrect;\nconst float PI = 3.1415926535897932384626433832795;\nvoid main() {\n  vec2 corner = vUv - mod(vUv, faceWH) + vec2(0, contCorrect / vidWH.y);\n  vec2 faceWHadj = faceWH - vec2(0, contCorrect * 2. / vidWH.y);\n  vec2 p = (vUv - corner) / faceWHadj - .5;\n  vec2 q = ${this.config.equiangular ? '2. / PI * atan(2. * p) + .5' : 'p + .5'};\n  vec2 eUv = corner + q * faceWHadj;\n  gl_FragColor = texture2D(mapped, eUv);\n}`,\n    });\n\n    return new THREE.Mesh(geometry, material);\n  }\n\n  /**\n   * @override\n   */\n  setTexture(mesh, textureData) {\n    const { texture } = textureData;\n\n    mesh.material.uniforms.mapped.value?.dispose();\n    mesh.material.uniforms.mapped.value = texture;\n    mesh.material.uniforms.vidWH.value.set(texture.image.videoWidth, texture.image.videoHeight);\n\n    this.__switchVideo(textureData.texture);\n  }\n\n}\n"],"names":["AbstractVideoAdapter","psv","options","config","autoplay","muted","video","on","CONSTANTS","EVENTS","BEFORE_RENDER","destroy","off","__removeVideo","handleEvent","e","type","needsUpdate","loadTexture","panorama","source","Promise","reject","PSVError","getPlugin","__createVideo","__videoLoadPromise","then","texture","THREE","VideoTexture","__switchVideo","currentTime","duration","paused","volume","image","play","disposeTexture","textureData","pause","container","removeChild","dispose","src","document","createElement","crossOrigin","withCredentials","loop","playsinline","style","display","preload","appendChild","self","resolve","addEventListener","onLoaded","__videoBufferPromise","removeEventListener","onError","err","onBuffer","buffer","buffered","i","l","length","start","end","Math","min","AbstractAdapter","supportsTransition","supportsPreload","supportsDownload","CubemapVideoAdapter","equiangular","createMesh","scale","cubeSize","SPHERE_RADIUS","geometry","BoxGeometry","toNonIndexed","clearGroups","uvs","getAttribute","a","b","c","d","A","B","C","setXY","material","ShaderMaterial","uniforms","mapped","value","contCorrect","faceWH","Vector2","vidWH","vertexShader","fragmentShader","Mesh","setTexture","mesh","set","videoWidth","videoHeight","id"],"mappings":"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"}